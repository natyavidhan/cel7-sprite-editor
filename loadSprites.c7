(= macro (mac (sym params . body) (list '= sym (cons 'mac (cons params body)))))
(macro func (sym params . body) (list '= sym (cons 'fn (cons params body))))
(macro when (x . body) (list 'if x (cons 'do body)))
(macro ++ (x n) (list '= x (list '+ x (or n 1))))
(macro -- (x n) (list '= x (list '- x (or n 1))))
(func each (f lst) (while lst (f (car lst)) (= lst (cdr lst))))
(func len (lst) (let n 0) (while lst (= lst (cdr lst)) (++ n)) n)


(func loadSprites (data)
    (let i (* 65 7 7)) ; start from "a" offset
    (each (fn (it)
        (poke (+ 0x4040 i) it)
        (++ i)
    ) data)
) ; I stole this script from snake lmao